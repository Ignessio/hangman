class ConsoleInterface
  # Класс ConsoleInterface для взаимодействия пользователя с игровым движком

  # получаем относительный путь к файлам с картинками
  # берем каждый файл
  # читаем его целиком
  # перекладываем его содержимое в новый массив
  # каждый файл становится элементом нового массива
  # для массива назначаем переменную константу, чтобы пересчитать файлы только 1 раз при запуске игры
  FIGURES =
      Dir["#{__dir__}/../data/figures/*.txt"].
      sort.
      map { |file_name| File.read(file_name) }

  # назначаем экземпляру консоли экземпляр игры, чтобы исползьовать его методы
  def initialize(game)
    @game = game
  end

  # игра возвращает массив букв, которых нет в массиве слова
  # собираем этот массив в строку из букв через запятую с пробелом
  def errors_to_show
    @game.errors.join(", ")
  end

  # выводим содержимое из элемента массива картинок с индексом = количеству ошибок
  def figure
    return FIGURES[@game.errors_made]
  end

  # выводим приглашение
  # принимаем из консоли введенную букву
  # приводим её к верхнему регистру
  # возвращаем эту букву
  def get_input
    print "Введите следующую букву:"
    letter = gets[0].upcase
    return letter
  end

  # выводим в консоль:
  # 1. слово с отгаданными буквами, которое вернул метод word_to_show
  # 2. картинку из метода figure
  # 3. ошибки, которые вернула игра
  # 4. ошибочные буквы
  # весь вывод заключаем в HEREDOC
  # эта штука начинается с <<~
  # потом идет маркер открытия (END, но может быть любой)
  # после всех строк добавляем маркер закрытия = маркеру открытия
  # сохраняются все отступы в строках и их порядок
  def print_out
    puts <<~GAMESTATUS
      Слово: #{word_to_show}
      #{figure}

      Ошибки (#{@game.errors_made}): #{errors_to_show}
      У вас осталось ошибок: #{@game.errors_allowed}

      GAMESTATUS

  # если игра вернула won? = true, выводим поздравление
  # если игра вернула lost? = true, воводим соболезнование
  if @game.won?
      puts "Поздравляем, вы выиграли!"
    elsif @game.lost?
      puts "Вы проиграли. Загаданное слово #{@game.word}."
    end
  end

  # составляем слова с отгаданными буквами
  # если игра вернула букву, будет буква
  # если игра вернула ничто, будет прочерк
  # собираем результат в массив
  def word_to_show
    result =
    @game.letters_to_guess.map do |letter|
      if letter == nil
        "__"
      else
        letter
      end
    end
    result.join(' ')
  end
end

